.id="Country")
countries <- c(United States="United States", "United Kingdom", "Austrailia", "Germany", "France",
"South Korea", "Japan", "Canada", "Mexico")
countries <- c(United_States ="United States", "United Kingdom", "Austrailia", "Germany", "France",
"South Korea", "Japan", "Canada", "Mexico")
# mapping of each country and how many titles are offered on disney
# currently displays indicies, will need to change to labels
map_df(countries,
~ disney %>%
filter(grepl(.x, country, ignore.case=TRUE)) %>%
count(),
.id="Country")
countries <- c("United States", "United Kingdom", "Austrailia", "Germany", "France",
"South Korea", "Japan", "Canada", "Mexico")
# mapping of each country and how many titles are offered on disney
# currently displays indicies, will need to change to labels
map_df(countries,
~ disney %>%
filter(grepl(.x, country, ignore.case=TRUE)) %>%
count(),
.id="Country")
country_availability <- disney %>%
filter(grepl("Germany", country) | !grepl("", country))
pacman::p_load(data.table, qs, stringr, tidyverse, googlesheets4, ggplot2,
lubridate, reshape2, openxlsx, scales, googledrive, zoo,
forecast)
disney_raw <- read.csv("disney_plus_titles.csv")
View(head(disney_raw))
disney_raw %>%
distinct(title) %>%
tally()
disney <- disney_raw %>%
mutate(date_added = ymd(as.Date(date_added, format = "%B %d, %Y")),
month_added = format(date_added, "%Y-%m"))
# occurrences by type and month/day
type_tally <- disney %>%
group_by(type, month_added) %>%
filter(month_added != "NA") %>%
summarise(count = n()) %>%
arrange(month_added, desc(count))
View(type_tally)
type_tally %>%
filter(month_added != "NA" & month_added >= "2020-01") %>%
ggplot(aes(x = month_added, y=count, color=type, group = type)) + geom_smooth() +
theme(axis.text.x = element_text(angle = 90)) +
labs(x = "Year-Month", y = "Count of Titles", title = "Number of TV Shows and Movies Added on Disney+")
country_availability <- disney %>%
filter(grepl("Germany", country) | !grepl("", country))
countries <- c("United States", "United Kingdom", "Austrailia", "Germany", "France",
"South Korea", "Japan", "Canada", "Mexico")
# mapping of each country and how many titles are offered on disney
# currently displays indicies, will need to change to labels
map_df(countries,
~ disney %>%
filter(grepl(.x, country, ignore.case=TRUE)) %>%
count(),
.id="Country")
?map_df
# mapping of each country and how many titles are offered on disney
# currently displays indicies, will need to change to labels
map_dfr(countries,
~ disney %>%
filter(grepl(.x, country, ignore.case=TRUE)) %>%
count(),
.id="Country")
disney_countries <- disney %>%
group_by(countries) %>%
summarise(count = n())
disney_countries <- disney %>%
group_by(country) %>%
summarise(count = n())
View(disney_countries)
# mapping of each country and how many titles are offered on disney
# currently displays indicies, will need to change to labels
disney_countries <- map_df(countries, ~ disney %>%
filter(grepl(.x, country, ignore.case=TRUE)) %>%
count(), .id="Country") %>%
?map_df
# mapping of each country and how many titles are offered on disney
# currently displays indicies, will need to change to labels
disney_countries <- map_df(countries, ~ disney %>%
filter(grepl(.x, country, ignore.case=TRUE)) %>%
count(), .id="Country")
View(disney_countries)
# mapping of each country and how many titles are offered on disney
# currently displays indicies, will need to change to labels
disney_countries <- map_df(countries, ~ disney %>%
filter(grepl(.x, country, ignore.case=TRUE)) %>%
count(), .id="Country") %>%
mutate(Country_Name = countries[Country])
View(country_availability)
View(disney_countries)
countries[1]
# mapping of each country and how many titles are offered on disney
# currently displays indicies, will need to change to labels
disney_countries <- map_df(countries, ~ disney %>%
filter(grepl(.x, country, ignore.case=TRUE)) %>%
count(), .id="Country") %>%
mutate(Country_Name = countries[[Country]])
# mapping of each country and how many titles are offered on disney
# currently displays indicies, will need to change to labels
disney_countries <- map_df(countries, ~ disney %>%
filter(grepl(.x, country, ignore.case=TRUE)) %>%
count(), .id="Country")
disney_countries["Country_Name"] <- country[disney_countries$Country]
disney_countries["Country_Name"] <- countries[disney_countries$Country]
class(disney_countries$Country)
disney_countries["Country_Name"] <- countries[as.numeric(disney_countries$Country)]
# mapping of each country and how many titles are offered on disney
# currently displays indicies, will need to change to labels
disney_countries <- map_df(countries, ~ disney %>%
filter(grepl(.x, country, ignore.case=TRUE)) %>%
count(), .id="Country") %>%
mutate(Country_Name = countries[as.numeric(Country)])
# mapping of each country and how many titles are offered on disney
# currently displays indicies, will need to change to labels
disney_countries <- map_df(countries, ~ disney %>%
filter(grepl(.x, country, ignore.case=TRUE)) %>%
count(), .id="Country") %>%
mutate(Country_Name = countries[as.numeric(Country)],
Number_of_titles = n)
disney_countries <- disney_countries %>%
select(Country_Name, Number_of_titles) %>%
arrange(desc(Number_of_titles))
countries <- c("United States", "United Kingdom", "Australia", "Germany", "France",
"South Korea", "Japan", "Canada", "Mexico")
# mapping of each country and how many titles are offered on disney
# currently displays indicies, will need to change to labels
disney_countries <- map_df(countries, ~ disney %>%
filter(grepl(.x, country, ignore.case=TRUE)) %>%
count(), .id="Country") %>%
mutate(Country_Name = countries[as.numeric(Country)],
Number_of_titles = n)
disney_countries <- disney_countries %>%
select(Country_Name, Number_of_titles) %>%
arrange(desc(Number_of_titles))
View(country_availability)
str_split(disney$country, ",")
country_list <- str_split(disney$country, ",")
pacman::p_load(data.table, qs, stringr, tidyverse, googlesheets4, ggplot2,
lubridate, reshape2, openxlsx, scales, googledrive, zoo,
forecast, rlist)
country_list <- str_split(disney$country, ",")
country_list <- distinct(str_split(disney$country, ","))
country_list <- unique(str_split(disney$country, ","))
country_list <- unlist(str_split(disney$country, ","))
View(disney)
View(disney_countries)
country_list <- unique(unlist(str_split(disney$country, ",")))
print(country_list)
country_list <- trimws(country_list)
print(country_list)
# get a unique country list
country_list <- unlist(trimws(str_split(disney$country, ",")))
country_list <- unique(country_list)
# get a unique country list
country_list <- unique(trimws(unlist(str_split(disney$country, ","))))
# get a unique country list
country_list <- unlist(str_split(disney$country, ","))
country_list <- unique(trimws(country_list))
print(country_list)
countries <- country_list
# mapping of each country and how many titles are offered on disney
# currently displays indicies, will need to change to labels
disney_countries <- map_df(countries, ~ disney %>%
filter(grepl(.x, country, ignore.case=TRUE)) %>%
count(), .id="Country") %>%
mutate(Country_Name = countries[as.numeric(Country)],
Number_of_titles = n)
disney_countries <- disney_countries %>%
select(Country_Name, Number_of_titles) %>%
arrange(desc(Number_of_titles))
disney_countries <- disney_countries %>%
select(Country_Name, Number_of_titles) %>%
filter(Country_Name != "") %>%
arrange(desc(Number_of_titles))
disney_countries %>%
ggplot(x = Country_Name, y = Number_of_titles, color = Country_Name) +
geom_bar()
disney_countries %>%
ggplot(aes(x = Country_Name, y = Number_of_titles), color = Country_Name) +
geom_bar()
disney_countries %>%
ggplot(aes(x = Country_Name, y = Number_of_titles), color = Country_Name) +
geom_bar()
disney_countries %>%
ggplot(aes(x = Country_Name, y = Number_of_titles), color = Country_Name) +
geom_col()
disney_countries %>%
filter(top_n(Number_of_titles, 10))
disney_countries %>%
filter(top_n(Number_of_titles, 10)) %>%
ggplot(aes(x = Country_Name, y = Number_of_titles), color = Country_Name) +
geom_col()
disney_countries %>%
top_n(Number_of_titles, 10) %>%
ggplot(aes(x = Country_Name, y = Number_of_titles), color = Country_Name) +
geom_col()
disney_countries <- disney_countries %>%
select(Country_Name, Number_of_titles) %>%
filter(Country_Name != "") %>%
arrange(desc(Number_of_titles)) %>%
top_n(Number_of_titles, 10)
disney_countries <- disney_countries %>%
select(Country_Name, Number_of_titles) %>%
filter(Country_Name != "") %>%
arrange(desc(Number_of_titles)) %>%
top_n(Number_of_titles, 10)
disney_countries %>%
top_n(10, Number_of_titles) %>%
ggplot(aes(x = Country_Name, y = Number_of_titles), color = Country_Name) +
geom_col()
disney_countries %>%
top_n(10, Number_of_titles) %>%
arrange(desc(Number_of_titles))
disney_countries %>%
top_n(10, Number_of_titles) %>%
arrange(desc(Number_of_titles)) %>%
ggplot(aes(x = Country_Name, y = Number_of_titles), color = Country_Name) +
geom_col()
disney_countries %>%
top_n(10, Number_of_titles) %>%
arrange(asc(Number_of_titles)) %>%
ggplot(aes(x = Country_Name, y = Number_of_titles), color = Country_Name) +
geom_col()
disney_countries %>%
top_n(10, Number_of_titles) %>%
arrange(Number_of_titles) %>%
ggplot(aes(x = Country_Name, y = Number_of_titles), color = Country_Name) +
geom_col()
# get mapping for country counts
disney_countries <- map_df(countries, ~ disney %>%
filter(grepl(.x, country, ignore.case=TRUE)) %>%
count(), .id="Country") %>%
mutate(Country_Name = countries[as.numeric(Country)],
Number_of_titles = n,
Percentage_of_titles = Number_of_titles/n())
View(disney_countries)
# get total titles
total_titles <- sum(distinct(disney$title))
# get total titles
total_titles <- sum(unique(disney$title))
# get total titles
total_titles <- sum((disney$title)
# get total titles
total_titles <- sum(disney$title)
# get total titles
total_titles <- sum(nrow(disney))
# get mapping for country counts
disney_countries <- map_df(countries, ~ disney %>%
filter(grepl(.x, country, ignore.case=TRUE)) %>%
count(), .id="Country") %>%
mutate(Country_Name = countries[as.numeric(Country)],
Number_of_titles = n,
Percentage_of_titles = Number_of_titles/total_titles)
disney_countries <- disney_countries %>%
select(Country_Name, Number_of_titles, Percentage_of_titles) %>%
filter(Country_Name != "") %>%
arrange(desc(Number_of_titles))
disney_countries %>%
top_n(10, Number_of_titles) %>%
arrange(Number_of_titles) %>%
ggplot(aes(x = Country_Name, y = Number_of_titles), color = Country_Name) +
geom_col()
disney_countries %>%
top_n(10, Number_of_titles) %>%
arrange(Number_of_titles) %>%
ggplot(aes(x = Country_Name, y = Percentage_of_titles), color = Country_Name) +
geom_col()
name
disney_countries %>%
arrange(Number_of_titles) %>%
mutate(name=factor(Number_of_titles, levels=Number_of_titles)) %>%
top_n(10, Number_of_titles) %>%
ggplot(aes(x = Country_Name, y = Percentage_of_titles), color = Country_Name) +
geom_col()
disney_countries %>%
arrange(Number_of_titles) %>%
top_n(10, Number_of_titles) %>%
ggplot(aes(x = Country_Name, y = Percentage_of_titles), color = Country_Name) +
geom_col()
View(disney_countries)
disney_countries %>%
arrange(Number_of_titles) %>%
top_n(10, Number_of_titles) %>%
ggplot(aes(x = reorder(Country_Name, -Percentage_of_titles), y = Percentage_of_titles), color = Country_Name) +
geom_col()
# column plot of titles by country
disney_countries %>%
arrange(Number_of_titles) %>%
top_n(10, Number_of_titles) %>%
ggplot(aes(x = reorder(Country_Name, -Percentage_of_titles), y = Percentage_of_titles), color = Country_Name) +
geom_col() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
# column plot of titles by country
disney_countries %>%
arrange(Number_of_titles) %>%
top_n(10, Number_of_titles) %>%
ggplot(aes(x = reorder(Country_Name, -Percentage_of_titles), y = Percentage_of_titles), color = Country_Name) +
geom_col() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
labs(x = "Country", y "% Share of Disney+ Titles")
# column plot of titles by country
disney_countries %>%
arrange(Number_of_titles) %>%
top_n(10, Number_of_titles) %>%
ggplot(aes(x = reorder(Country_Name, -Percentage_of_titles), y = Percentage_of_titles), color = Country_Name) +
geom_col() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
labs(x = "Country", y "% Share of Disney+ Titles")
# column plot of titles by country
disney_countries %>%
arrange(Number_of_titles) %>%
top_n(10, Number_of_titles) %>%
ggplot(aes(x = reorder(Country_Name, -Percentage_of_titles), y = Percentage_of_titles), color = Country_Name) +
geom_col() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
labs(x = "Country", y = "% Share of Disney+ Titles")
# column plot of titles by country
disney_countries %>%
arrange(Number_of_titles) %>%
top_n(10, Number_of_titles) %>%
ggplot(aes(x = reorder(Country_Name, -Percentage_of_titles), y = Percentage_of_titles), color = Country_Name) +
geom_col() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
labs(x = "Country", y = "% Share of Disney+ Titles") +
annotate("text", x = 1, y = 1, label = "A")
View(disney_countries)
# column plot of titles by country
disney_countries %>%
arrange(Number_of_titles) %>%
top_n(10, Number_of_titles) %>%
ggplot(aes(x = reorder(Country_Name, -Percentage_of_titles), y = Percentage_of_titles), color = Country_Name) +
geom_col() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
labs(x = "Country", y = "% Share of Disney+ Titles") +
annotate("text", x = 1, y = 1, label = "1147 titles!")
# column plot of titles by country
disney_countries %>%
arrange(Number_of_titles) %>%
top_n(10, Number_of_titles) %>%
ggplot(aes(x = reorder(Country_Name, -Percentage_of_titles), y = Percentage_of_titles), color = Country_Name) +
geom_col() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
labs(x = "Country", y = "% Share of Disney+ Titles") +
annotate("text", x = 1.2, y = 1, label = "1147 titles!")
# column plot of titles by country
disney_countries %>%
arrange(Number_of_titles) %>%
top_n(10, Number_of_titles) %>%
ggplot(aes(x = reorder(Country_Name, -Percentage_of_titles), y = Percentage_of_titles), color = Country_Name) +
geom_col() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
labs(x = "Country", y = "% Share of Disney+ Titles") +
annotate("text", x = 1.5, y = 1, label = "1147 titles!")
# column plot of titles by country
disney_countries %>%
arrange(Number_of_titles) %>%
top_n(10, Number_of_titles) %>%
ggplot(aes(x = reorder(Country_Name, -Percentage_of_titles), y = Percentage_of_titles), color = Country_Name) +
geom_col() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
labs(x = "Country", y = "% Share of Disney+ Titles") +
annotate("text", x = 1.5, y = 0.7, label = "1147 titles!")
# column plot of titles by country
disney_countries %>%
arrange(Number_of_titles) %>%
top_n(10, Number_of_titles) %>%
ggplot(aes(x = reorder(Country_Name, -Percentage_of_titles), y = Percentage_of_titles), color = Country_Name) +
geom_col() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
labs(x = "Country", y = "% Share of Disney+ Titles") +
annotate("text", x = 1.5, y = 0.9, label = "1147 titles!")
# column plot of titles by country
disney_countries %>%
arrange(Number_of_titles) %>%
top_n(10, Number_of_titles) %>%
ggplot(aes(x = reorder(Country_Name, -Percentage_of_titles), y = Percentage_of_titles), color = Country_Name) +
geom_col() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
labs(x = "Country", y = "% Share of Disney+ Titles") +
annotate("text", x = 1.3, y = 0.9, label = "1147 titles!")
type_tally %>%
filter(month_added != "NA" & month_added >= "2020-01") %>%
ggplot(aes(x = month_added, y=count, color=type, group = type)) + geom_smooth() +
theme(axis.text.x = element_text(angle = 90)) +
labs(x = "Year-Month", y = "Count of Titles", title = "Number of TV Shows and Movies Added on Disney+")
country_availability <- disney %>%
filter(grepl("Germany", country) | !grepl("", country))
countries <- c("United States", "United Kingdom", "Australia", "Germany", "France",
"South Korea", "Japan", "Canada", "Mexico", "Spain", "Hungary", "India",
"Singapore", "Ireland", "Brazil")
# get a unique country list
country_list <- unlist(str_split(disney$country, ","))
country_list <- unique(trimws(country_list))
countries <- country_list
print(country_list)
# get total titles
total_titles <- sum(nrow(disney))
# get mapping for country counts
disney_countries <- map_df(countries, ~ disney %>%
filter(grepl(.x, country, ignore.case=TRUE)) %>%
count(), .id="Country") %>%
mutate(Country_Name = countries[as.numeric(Country)],
Number_of_titles = n,
Percentage_of_titles = Number_of_titles/total_titles)
disney_countries <- disney_countries %>%
select(Country_Name, Number_of_titles, Percentage_of_titles) %>%
filter(Country_Name != "") %>%
arrange(desc(Number_of_titles))
# column plot of titles by country
disney_countries %>%
arrange(Number_of_titles) %>%
top_n(10, Number_of_titles) %>%
ggplot(aes(x = reorder(Country_Name, -Percentage_of_titles), y = Percentage_of_titles), color = Country_Name) +
geom_col() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
labs(x = "Country", y = "% Share of Disney+ Titles") +
annotate("text", x = 1.3, y = 0.9, label = "1147 titles!")
View(disney)
# Network analysis of Actors / Directors and find interesting insights
# unpack list similiar to titles
director_list <- unlist(str_split(disney$director, ","))
director_list <- unique(trimws(director_list))
actor_list <- unlist(str_split(disney$cast, ","))
actor_list <- unlist(str_split(actor_list))
actor_list <- unlist(str_split(actor_list))
actor_list <- unlist(trimws(actor_list))
actor_list <- unlist(str_split(disney$cast, ","))
actor_list <- unlist(trimws(actor_list))
actor_list <- unique(trimws(actor_list))
print(director_list)
actor_list <- unique(trimws(actor_list))
print(actor_list)
View(disney)
disney_countries <- map_df(director_list, ~ disney %>%
filter(grepl(.x, director, ignore.case=TRUE)) %>%
count(), .id="director") %>%
actor_list <- unlist(str_split(disney$cast, ","))
disney_director <- map_df(director_list, ~ disney %>%
filter(grepl(.x, director, ignore.case=TRUE)) %>%
count(), .id="director") %>%
actor_list <- unlist(str_split(disney$cast, ","))
disney_director <- map_df(director_list, ~ disney %>%
filter(grepl(.x, director, ignore.case=TRUE)) %>%
count(), .id="director")
View(disney_director)
disney_director <- map_df(director_list, ~ disney %>%
filter(grepl(.x, director, ignore.case=TRUE)) %>%
count(), .id="director") %>%
mutate(Director_Name = director_list[as.numeric(director)],
Number_of_titles = n,
Percentage_of_titles = Number_of_titles/total_titles)
disney_actor <- map_df(actor_list, ~ disney %>%
filter(grepl(.x, actor, ignore.case=TRUE)) %>%
count(), .id="actor") %>%
mutate(Actor_Name = director_list[as.numeric(actor)],
Number_of_titles = n,
Percentage_of_titles = Number_of_titles/total_titles)
View(disney)
disney_actor <- map_df(actor_list, ~ disney %>%
filter(grepl(.x, cast, ignore.case=TRUE)) %>%
count(), .id="actor") %>%
mutate(Actor_Name = director_list[as.numeric(actor)],
Number_of_titles = n,
Percentage_of_titles = Number_of_titles/total_titles)
disney_director <- map_df(director_list, ~ disney %>%
filter(grepl(.x, director, ignore.case=TRUE)) %>%
count(), .id="director") %>%
mutate(Director_Name = director_list[as.numeric(director)],
Number_of_titles = n,
Percentage_of_titles = Number_of_titles/total_titles) %>%
arrange(desc(Number_of_titles))
View(disney_director)
disney_actor <- map_df(actor_list, ~ disney %>%
filter(grepl(.x, cast, ignore.case=TRUE)) %>%
count(), .id="actor") %>%
mutate(Actor_Name = director_list[as.numeric(actor)],
Number_of_titles = n,
Percentage_of_titles = Number_of_titles/total_titles) %>%
arrange(desc(Number_of_titles))
View(disney_actor)
disney_actor <- map_df(actor_list, ~ disney %>%
filter(grepl(.x, cast, ignore.case=TRUE)) %>%
count(), .id="actor")
View(disney_actor)
disney_actor <- map_df(actor_list, ~ disney %>%
filter(grepl(.x, cast, ignore.case=TRUE)) %>%
count(), .id="actor") %>%
mutate(Actor_Name = director_list[as.numeric(actor)],
Number_of_titles = n,
Percentage_of_titles = Number_of_titles/total_titles) %>%
arrange(desc(Number_of_titles))
print(actor_list)
# will need to correct due to NA and possible misattribution
disney_actor <- map_df(actor_list, ~ disney %>%
filter(grepl(.x, cast, ignore.case=TRUE)) %>%
count(), .id="actor") %>%
mutate(Actor_Name = director_list[as.numeric(actor)],
Number_of_titles = n,
Percentage_of_titles = Number_of_titles/total_titles) %>%
arrange(desc(Number_of_titles))
View(disney_actor)
# will need to correct due to NA and possible misattribution
disney_actor <- map_df(actor_list, ~ disney %>%
filter(grepl(.x, cast, ignore.case=TRUE)) %>%
count(), .id="actor") %>%
mutate(Actor_Name = actor_list[as.numeric(actor)],
Number_of_titles = n,
Percentage_of_titles = Number_of_titles/total_titles) %>%
arrange(desc(Number_of_titles))
View(disney_actor)
